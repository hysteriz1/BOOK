// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// BooksColumns holds the columns for the "books" table.
	BooksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "reservations", Type: field.TypeTime},
		{Name: "bookstatus_bookstatus_book", Type: field.TypeInt, Nullable: true},
		{Name: "room_room_book", Type: field.TypeInt, Nullable: true},
		{Name: "user_user_book", Type: field.TypeInt, Nullable: true},
	}
	// BooksTable holds the schema information for the "books" table.
	BooksTable = &schema.Table{
		Name:       "books",
		Columns:    BooksColumns,
		PrimaryKey: []*schema.Column{BooksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "books_bookstatuses_BOOKSTATUS_BOOK",
				Columns: []*schema.Column{BooksColumns[2]},

				RefColumns: []*schema.Column{BookstatusesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_rooms_ROOM_BOOK",
				Columns: []*schema.Column{BooksColumns[3]},

				RefColumns: []*schema.Column{RoomsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "books_users_USER_BOOK",
				Columns: []*schema.Column{BooksColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BookstatusesColumns holds the columns for the "bookstatuses" table.
	BookstatusesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "bookstatusdata", Type: field.TypeString},
	}
	// BookstatusesTable holds the schema information for the "bookstatuses" table.
	BookstatusesTable = &schema.Table{
		Name:        "bookstatuses",
		Columns:     BookstatusesColumns,
		PrimaryKey:  []*schema.Column{BookstatusesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomsColumns holds the columns for the "rooms" table.
	RoomsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomname", Type: field.TypeString},
		{Name: "room_info_info_room", Type: field.TypeInt, Nullable: true},
		{Name: "room_status_status_room", Type: field.TypeInt, Nullable: true},
		{Name: "room_type_roomtype_room", Type: field.TypeInt, Nullable: true},
	}
	// RoomsTable holds the schema information for the "rooms" table.
	RoomsTable = &schema.Table{
		Name:       "rooms",
		Columns:    RoomsColumns,
		PrimaryKey: []*schema.Column{RoomsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "rooms_room_infos_INFO_ROOM",
				Columns: []*schema.Column{RoomsColumns[2]},

				RefColumns: []*schema.Column{RoomInfosColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rooms_room_status_STATUS_ROOM",
				Columns: []*schema.Column{RoomsColumns[3]},

				RefColumns: []*schema.Column{RoomStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rooms_room_types_ROOMTYPE_ROOM",
				Columns: []*schema.Column{RoomsColumns[4]},

				RefColumns: []*schema.Column{RoomTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RoomInfosColumns holds the columns for the "room_infos" table.
	RoomInfosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "infobed", Type: field.TypeInt},
		{Name: "inforefrigerat", Type: field.TypeInt},
		{Name: "infowardrob", Type: field.TypeInt},
		{Name: "infoofficede", Type: field.TypeInt},
	}
	// RoomInfosTable holds the schema information for the "room_infos" table.
	RoomInfosTable = &schema.Table{
		Name:        "room_infos",
		Columns:     RoomInfosColumns,
		PrimaryKey:  []*schema.Column{RoomInfosColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomStatusColumns holds the columns for the "room_status" table.
	RoomStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "statusdata", Type: field.TypeString},
	}
	// RoomStatusTable holds the schema information for the "room_status" table.
	RoomStatusTable = &schema.Table{
		Name:        "room_status",
		Columns:     RoomStatusColumns,
		PrimaryKey:  []*schema.Column{RoomStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RoomTypesColumns holds the columns for the "room_types" table.
	RoomTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "roomtypedata", Type: field.TypeString},
		{Name: "costdata", Type: field.TypeInt},
	}
	// RoomTypesTable holds the schema information for the "room_types" table.
	RoomTypesTable = &schema.Table{
		Name:        "room_types",
		Columns:     RoomTypesColumns,
		PrimaryKey:  []*schema.Column{RoomTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "useremail", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "user_status_userstatus_user", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_user_status_USERSTATUS_USER",
				Columns: []*schema.Column{UsersColumns[3]},

				RefColumns: []*schema.Column{UserStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserStatusColumns holds the columns for the "user_status" table.
	UserStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeString},
	}
	// UserStatusTable holds the schema information for the "user_status" table.
	UserStatusTable = &schema.Table{
		Name:        "user_status",
		Columns:     UserStatusColumns,
		PrimaryKey:  []*schema.Column{UserStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BooksTable,
		BookstatusesTable,
		RoomsTable,
		RoomInfosTable,
		RoomStatusTable,
		RoomTypesTable,
		UsersTable,
		UserStatusTable,
	}
)

func init() {
	BooksTable.ForeignKeys[0].RefTable = BookstatusesTable
	BooksTable.ForeignKeys[1].RefTable = RoomsTable
	BooksTable.ForeignKeys[2].RefTable = UsersTable
	RoomsTable.ForeignKeys[0].RefTable = RoomInfosTable
	RoomsTable.ForeignKeys[1].RefTable = RoomStatusTable
	RoomsTable.ForeignKeys[2].RefTable = RoomTypesTable
	UsersTable.ForeignKeys[0].RefTable = UserStatusTable
}
