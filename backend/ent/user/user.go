// Code generated by entc, DO NOT EDIT.

package user

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUSEREMAIL holds the string denoting the useremail field in the database.
	FieldUSEREMAIL = "useremail"
	// FieldUSERNAME holds the string denoting the username field in the database.
	FieldUSERNAME = "username"

	// EdgeUSERBOOK holds the string denoting the user_book edge name in mutations.
	EdgeUSERBOOK = "USER_BOOK"
	// EdgeUSERUSERSTATUS holds the string denoting the user_userstatus edge name in mutations.
	EdgeUSERUSERSTATUS = "USER_USERSTATUS"

	// Table holds the table name of the user in the database.
	Table = "users"
	// USERBOOKTable is the table the holds the USER_BOOK relation/edge.
	USERBOOKTable = "books"
	// USERBOOKInverseTable is the table name for the Book entity.
	// It exists in this package in order to avoid circular dependency with the "book" package.
	USERBOOKInverseTable = "books"
	// USERBOOKColumn is the table column denoting the USER_BOOK relation/edge.
	USERBOOKColumn = "user_user_book"
	// USERUSERSTATUSTable is the table the holds the USER_USERSTATUS relation/edge.
	USERUSERSTATUSTable = "users"
	// USERUSERSTATUSInverseTable is the table name for the UserStatus entity.
	// It exists in this package in order to avoid circular dependency with the "userstatus" package.
	USERUSERSTATUSInverseTable = "user_status"
	// USERUSERSTATUSColumn is the table column denoting the USER_USERSTATUS relation/edge.
	USERUSERSTATUSColumn = "user_status_userstatus_user"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldUSEREMAIL,
	FieldUSERNAME,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the User type.
var ForeignKeys = []string{
	"user_status_userstatus_user",
}

var (
	// USEREMAILValidator is a validator for the "USEREMAIL" field. It is called by the builders before save.
	USEREMAILValidator func(string) error
	// USERNAMEValidator is a validator for the "USERNAME" field. It is called by the builders before save.
	USERNAMEValidator func(string) error
)
