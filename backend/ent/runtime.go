// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/m16_z/app/ent/bookstatus"
	"github.com/m16_z/app/ent/room"
	"github.com/m16_z/app/ent/roomstatus"
	"github.com/m16_z/app/ent/roomtype"
	"github.com/m16_z/app/ent/schema"
	"github.com/m16_z/app/ent/user"
	"github.com/m16_z/app/ent/userstatus"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	bookstatusFields := schema.Bookstatus{}.Fields()
	_ = bookstatusFields
	// bookstatusDescBOOKSTATUSDATA is the schema descriptor for BOOKSTATUSDATA field.
	bookstatusDescBOOKSTATUSDATA := bookstatusFields[0].Descriptor()
	// bookstatus.BOOKSTATUSDATAValidator is a validator for the "BOOKSTATUSDATA" field. It is called by the builders before save.
	bookstatus.BOOKSTATUSDATAValidator = bookstatusDescBOOKSTATUSDATA.Validators[0].(func(string) error)
	roomFields := schema.Room{}.Fields()
	_ = roomFields
	// roomDescROOMNAME is the schema descriptor for ROOMNAME field.
	roomDescROOMNAME := roomFields[0].Descriptor()
	// room.ROOMNAMEValidator is a validator for the "ROOMNAME" field. It is called by the builders before save.
	room.ROOMNAMEValidator = roomDescROOMNAME.Validators[0].(func(string) error)
	roomstatusFields := schema.RoomStatus{}.Fields()
	_ = roomstatusFields
	// roomstatusDescSTATUSDATA is the schema descriptor for STATUSDATA field.
	roomstatusDescSTATUSDATA := roomstatusFields[0].Descriptor()
	// roomstatus.STATUSDATAValidator is a validator for the "STATUSDATA" field. It is called by the builders before save.
	roomstatus.STATUSDATAValidator = roomstatusDescSTATUSDATA.Validators[0].(func(string) error)
	roomtypeFields := schema.RoomType{}.Fields()
	_ = roomtypeFields
	// roomtypeDescROOMTYPEDATA is the schema descriptor for ROOMTYPEDATA field.
	roomtypeDescROOMTYPEDATA := roomtypeFields[0].Descriptor()
	// roomtype.ROOMTYPEDATAValidator is a validator for the "ROOMTYPEDATA" field. It is called by the builders before save.
	roomtype.ROOMTYPEDATAValidator = roomtypeDescROOMTYPEDATA.Validators[0].(func(string) error)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUSEREMAIL is the schema descriptor for USEREMAIL field.
	userDescUSEREMAIL := userFields[0].Descriptor()
	// user.USEREMAILValidator is a validator for the "USEREMAIL" field. It is called by the builders before save.
	user.USEREMAILValidator = userDescUSEREMAIL.Validators[0].(func(string) error)
	// userDescUSERNAME is the schema descriptor for USERNAME field.
	userDescUSERNAME := userFields[1].Descriptor()
	// user.USERNAMEValidator is a validator for the "USERNAME" field. It is called by the builders before save.
	user.USERNAMEValidator = userDescUSERNAME.Validators[0].(func(string) error)
	userstatusFields := schema.UserStatus{}.Fields()
	_ = userstatusFields
	// userstatusDescSTATUS is the schema descriptor for STATUS field.
	userstatusDescSTATUS := userstatusFields[0].Descriptor()
	// userstatus.STATUSValidator is a validator for the "STATUS" field. It is called by the builders before save.
	userstatus.STATUSValidator = userstatusDescSTATUS.Validators[0].(func(string) error)
}
